{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime-corejs2/helpers/esm/asyncToGenerator\";\nvar __jsx = React.createElement;\nimport React, { useState } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { createProduct } from '../../store/actions/productActions';\nimport Router from 'next/router';\nimport { MDBContainer, MDBRow, MDBCol, MDBBtn, MDBInput, MDBIcon } from 'mdbreact';\nexport var AddProduct = function AddProduct(props) {\n  var _useState = useState(''),\n      name = _useState[0],\n      setName = _useState[1];\n\n  var _useState2 = useState(''),\n      brand = _useState2[0],\n      setBrand = _useState2[1];\n\n  var _useState3 = useState(''),\n      price = _useState3[0],\n      setPrice = _useState3[1];\n\n  var _useState4 = useState(''),\n      image = _useState4[0],\n      setImage = _useState4[1];\n\n  var _useState5 = useState(''),\n      description = _useState5[0],\n      setDescription = _useState5[1];\n\n  var handleNameChange = function handleNameChange(event) {\n    return setName(event.currentTarget.value);\n  };\n\n  var handleBrandChange = function handleBrandChange(event) {\n    return setBrand(event.currentTarget.value);\n  };\n\n  var handlePriceChange = function handlePriceChange(event) {\n    return setPrice(event.currentTarget.value);\n  };\n\n  var handleImageChange = function handleImageChange(event) {\n    return setImage(event.currentTarget.value);\n  };\n\n  var handleDescriptionChange = function handleDescriptionChange(event) {\n    return setDescription(event.currentTarget.value);\n  };\n\n  var handleSubmit =\n  /*#__PURE__*/\n  function () {\n    var _ref = _asyncToGenerator(\n    /*#__PURE__*/\n    _regeneratorRuntime.mark(function _callee(event) {\n      var data;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              event.preventDefault();\n              data = {\n                name: name,\n                brand: brand,\n                price: price,\n                image: image,\n                description: description\n              };\n              _context.prev = 2;\n              _context.next = 5;\n              return props.createProduct(data);\n\n            case 5:\n              Router.push('/products');\n              _context.next = 11;\n              break;\n\n            case 8:\n              _context.prev = 8;\n              _context.t0 = _context[\"catch\"](2);\n              console.log(_context.t0);\n\n            case 11:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, null, [[2, 8]]);\n    }));\n\n    return function handleSubmit(_x) {\n      return _ref.apply(this, arguments);\n    };\n  }();\n\n  return __jsx(React.Fragment, null, __jsx(MDBContainer, {\n    className: \"px-5\"\n  }, __jsx(MDBRow, {\n    className: \"d-flex justify-content-center\"\n  }, __jsx(MDBCol, {\n    className: \"card mt-3\",\n    sm: \"12\",\n    md: \"8\",\n    lg: \"6\"\n  }, __jsx(\"form\", {\n    onSubmit: handleSubmit\n  }, __jsx(\"p\", {\n    className: \"h5 text-center mt-4 mb-4\"\n  }, \"Add New Product\"), __jsx(\"div\", {\n    className: \"grey-text\"\n  }, __jsx(MDBInput, {\n    label: \"Name\",\n    icon: \"user\",\n    group: true,\n    type: \"text\",\n    validate: true,\n    error: \"wrong\",\n    success: \"right\",\n    onChange: handleNameChange\n  }), __jsx(MDBInput, {\n    label: \"Brand\",\n    icon: \"clone\",\n    group: true,\n    type: \"text\",\n    validate: true,\n    error: \"wrong\",\n    success: \"right\",\n    onChange: handleBrandChange\n  }), __jsx(MDBInput, {\n    label: \"Price\",\n    icon: \"coins\",\n    group: true,\n    type: \"number\",\n    validate: true,\n    error: \"wrong\",\n    success: \"right\",\n    onChange: handlePriceChange\n  }), __jsx(MDBInput, {\n    label: \"image\",\n    icon: \"image\",\n    group: true,\n    type: \"text\",\n    validate: true,\n    error: \"wrong\",\n    success: \"right\",\n    onChange: handleImageChange\n  }), __jsx(MDBInput, {\n    label: \"description\",\n    icon: \"info\",\n    group: true,\n    type: \"text\",\n    validate: true,\n    error: \"wrong\",\n    success: \"right\",\n    onChange: handleDescriptionChange\n  })), __jsx(\"div\", {\n    className: \"text-center\"\n  }, __jsx(MDBBtn, {\n    className: \"btn btn-outline-black  my-4\",\n    type: \"submit\"\n  }, \"Submit\", __jsx(MDBIcon, {\n    far: true,\n    icon: \"paper-plane\",\n    className: \"ml-2\"\n  }))))))));\n};\nAddProduct.propTypes = {\n  createProduct: PropTypes.func.isRequired\n};\nexport default connect(null, {\n  createProduct: createProduct\n})(AddProduct);","map":{"version":3,"sources":["/home/dolapo/ecommerce-nextjs-t/src/components/Products/AddProduct.tsx"],"names":["React","useState","connect","PropTypes","createProduct","Router","MDBContainer","MDBRow","MDBCol","MDBBtn","MDBInput","MDBIcon","AddProduct","props","name","setName","brand","setBrand","price","setPrice","image","setImage","description","setDescription","handleNameChange","event","currentTarget","value","handleBrandChange","handlePriceChange","handleImageChange","handleDescriptionChange","handleSubmit","preventDefault","data","push","console","log","propTypes","func","isRequired"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAA2D,OAA3D;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,aAAT,QAA8B,oCAA9B;AACA,OAAOC,MAAP,MAAmB,aAAnB;AACA,SACEC,YADF,EAEEC,MAFF,EAGEC,MAHF,EAIEC,MAJF,EAKEC,QALF,EAMEC,OANF,QAOO,UAPP;AASA,OAAO,IAAMC,UAAU,GAAG,SAAbA,UAAa,CAACC,KAAD,EAQpB;AAAA,kBACoBZ,QAAQ,CAAS,EAAT,CAD5B;AAAA,MACGa,IADH;AAAA,MACSC,OADT;;AAAA,mBAEsBd,QAAQ,CAAS,EAAT,CAF9B;AAAA,MAEGe,KAFH;AAAA,MAEUC,QAFV;;AAAA,mBAGsBhB,QAAQ,CAAS,EAAT,CAH9B;AAAA,MAGGiB,KAHH;AAAA,MAGUC,QAHV;;AAAA,mBAIsBlB,QAAQ,CAAS,EAAT,CAJ9B;AAAA,MAIGmB,KAJH;AAAA,MAIUC,QAJV;;AAAA,mBAKkCpB,QAAQ,CAAS,EAAT,CAL1C;AAAA,MAKGqB,WALH;AAAA,MAKgBC,cALhB;;AAOJ,MAAMC,gBAAgB,GAAG,SAAnBA,gBAAmB,CAACC,KAAD;AAAA,WACvBV,OAAO,CAACU,KAAK,CAACC,aAAN,CAAoBC,KAArB,CADgB;AAAA,GAAzB;;AAGA,MAAMC,iBAAiB,GAAG,SAApBA,iBAAoB,CAACH,KAAD;AAAA,WACxBR,QAAQ,CAACQ,KAAK,CAACC,aAAN,CAAoBC,KAArB,CADgB;AAAA,GAA1B;;AAGA,MAAME,iBAAiB,GAAG,SAApBA,iBAAoB,CAACJ,KAAD;AAAA,WACxBN,QAAQ,CAACM,KAAK,CAACC,aAAN,CAAoBC,KAArB,CADgB;AAAA,GAA1B;;AAGA,MAAMG,iBAAiB,GAAG,SAApBA,iBAAoB,CAACL,KAAD;AAAA,WACxBJ,QAAQ,CAACI,KAAK,CAACC,aAAN,CAAoBC,KAArB,CADgB;AAAA,GAA1B;;AAGA,MAAMI,uBAAuB,GAAG,SAA1BA,uBAA0B,CAACN,KAAD;AAAA,WAC9BF,cAAc,CAACE,KAAK,CAACC,aAAN,CAAoBC,KAArB,CADgB;AAAA,GAAhC;;AAGA,MAAMK,YAAY;AAAA;AAAA;AAAA;AAAA;AAAA,6BAAG,iBAAOP,KAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AACnBA,cAAAA,KAAK,CAACQ,cAAN;AACMC,cAAAA,IAFa,GAEN;AACXpB,gBAAAA,IAAI,EAAJA,IADW;AAEXE,gBAAAA,KAAK,EAALA,KAFW;AAGXE,gBAAAA,KAAK,EAALA,KAHW;AAIXE,gBAAAA,KAAK,EAALA,KAJW;AAKXE,gBAAAA,WAAW,EAAXA;AALW,eAFM;AAAA;AAAA;AAAA,qBAWXT,KAAK,CAACT,aAAN,CAAoB8B,IAApB,CAXW;;AAAA;AAYjB7B,cAAAA,MAAM,CAAC8B,IAAP,CAAY,WAAZ;AAZiB;AAAA;;AAAA;AAAA;AAAA;AAcjBC,cAAAA,OAAO,CAACC,GAAR;;AAdiB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAH;;AAAA,oBAAZL,YAAY;AAAA;AAAA;AAAA,KAAlB;;AAkBA,SACE,4BACE,MAAC,YAAD;AAAc,IAAA,SAAS,EAAC;AAAxB,KACE,MAAC,MAAD;AAAQ,IAAA,SAAS,EAAC;AAAlB,KACE,MAAC,MAAD;AAAQ,IAAA,SAAS,EAAC,WAAlB;AAA8B,IAAA,EAAE,EAAC,IAAjC;AAAsC,IAAA,EAAE,EAAC,GAAzC;AAA6C,IAAA,EAAE,EAAC;AAAhD,KACE;AAAM,IAAA,QAAQ,EAAEA;AAAhB,KACE;AAAG,IAAA,SAAS,EAAC;AAAb,uBADF,EAEE;AAAK,IAAA,SAAS,EAAC;AAAf,KACE,MAAC,QAAD;AACE,IAAA,KAAK,EAAC,MADR;AAEE,IAAA,IAAI,EAAC,MAFP;AAGE,IAAA,KAAK,MAHP;AAIE,IAAA,IAAI,EAAC,MAJP;AAKE,IAAA,QAAQ,MALV;AAME,IAAA,KAAK,EAAC,OANR;AAOE,IAAA,OAAO,EAAC,OAPV;AAQE,IAAA,QAAQ,EAAER;AARZ,IADF,EAWE,MAAC,QAAD;AACE,IAAA,KAAK,EAAC,OADR;AAEE,IAAA,IAAI,EAAC,OAFP;AAGE,IAAA,KAAK,MAHP;AAIE,IAAA,IAAI,EAAC,MAJP;AAKE,IAAA,QAAQ,MALV;AAME,IAAA,KAAK,EAAC,OANR;AAOE,IAAA,OAAO,EAAC,OAPV;AAQE,IAAA,QAAQ,EAAEI;AARZ,IAXF,EAqBE,MAAC,QAAD;AACE,IAAA,KAAK,EAAC,OADR;AAEE,IAAA,IAAI,EAAC,OAFP;AAGE,IAAA,KAAK,MAHP;AAIE,IAAA,IAAI,EAAC,QAJP;AAKE,IAAA,QAAQ,MALV;AAME,IAAA,KAAK,EAAC,OANR;AAOE,IAAA,OAAO,EAAC,OAPV;AAQE,IAAA,QAAQ,EAAEC;AARZ,IArBF,EA+BE,MAAC,QAAD;AACE,IAAA,KAAK,EAAC,OADR;AAEE,IAAA,IAAI,EAAC,OAFP;AAGE,IAAA,KAAK,MAHP;AAIE,IAAA,IAAI,EAAC,MAJP;AAKE,IAAA,QAAQ,MALV;AAME,IAAA,KAAK,EAAC,OANR;AAOE,IAAA,OAAO,EAAC,OAPV;AAQE,IAAA,QAAQ,EAAEC;AARZ,IA/BF,EAyCE,MAAC,QAAD;AACE,IAAA,KAAK,EAAC,aADR;AAEE,IAAA,IAAI,EAAC,MAFP;AAGE,IAAA,KAAK,MAHP;AAIE,IAAA,IAAI,EAAC,MAJP;AAKE,IAAA,QAAQ,MALV;AAME,IAAA,KAAK,EAAC,OANR;AAOE,IAAA,OAAO,EAAC,OAPV;AAQE,IAAA,QAAQ,EAAEC;AARZ,IAzCF,CAFF,EAsDE;AAAK,IAAA,SAAS,EAAC;AAAf,KACE,MAAC,MAAD;AAAQ,IAAA,SAAS,EAAC,6BAAlB;AAAgD,IAAA,IAAI,EAAC;AAArD,eAEE,MAAC,OAAD;AAAS,IAAA,GAAG,MAAZ;AAAa,IAAA,IAAI,EAAC,aAAlB;AAAgC,IAAA,SAAS,EAAC;AAA1C,IAFF,CADF,CAtDF,CADF,CADF,CADF,CADF,CADF;AAuED,CAvHM;AAyHPnB,UAAU,CAAC0B,SAAX,GAAuB;AACrBlC,EAAAA,aAAa,EAAED,SAAS,CAACoC,IAAV,CAAeC;AADT,CAAvB;AAIA,eAAetC,OAAO,CAAC,IAAD,EAAO;AAAEE,EAAAA,aAAa,EAAbA;AAAF,CAAP,CAAP,CAAiCQ,UAAjC,CAAf","sourcesContent":["import React, { useState, SyntheticEvent, FormEvent } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { createProduct } from '../../store/actions/productActions';\nimport Router from 'next/router';\nimport {\n  MDBContainer,\n  MDBRow,\n  MDBCol,\n  MDBBtn,\n  MDBInput,\n  MDBIcon,\n} from 'mdbreact';\n\nexport const AddProduct = (props: {\n  createProduct: (arg0: {\n    name: string;\n    brand: string;\n    price: string;\n    image: string;\n    description: string;\n  }) => void;\n}) => {\n  const [name, setName] = useState<string>('');\n  const [brand, setBrand] = useState<string>('');\n  const [price, setPrice] = useState<string>('');\n  const [image, setImage] = useState<string>('');\n  const [description, setDescription] = useState<string>('');\n\n  const handleNameChange = (event: FormEvent<HTMLInputElement>) =>\n    setName(event.currentTarget.value);\n\n  const handleBrandChange = (event: FormEvent<HTMLInputElement>) =>\n    setBrand(event.currentTarget.value);\n\n  const handlePriceChange = (event: FormEvent<HTMLInputElement>) =>\n    setPrice(event.currentTarget.value);\n\n  const handleImageChange = (event: FormEvent<HTMLInputElement>) =>\n    setImage(event.currentTarget.value);\n\n  const handleDescriptionChange = (event: FormEvent<HTMLInputElement>) =>\n    setDescription(event.currentTarget.value);\n\n  const handleSubmit = async (event: SyntheticEvent) => {\n    event.preventDefault();\n    const data = {\n      name,\n      brand,\n      price,\n      image,\n      description,\n    };\n\n    try {\n      await props.createProduct(data);\n      Router.push('/products');\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  return (\n    <>\n      <MDBContainer className=\"px-5\">\n        <MDBRow className=\"d-flex justify-content-center\">\n          <MDBCol className=\"card mt-3\" sm=\"12\" md=\"8\" lg=\"6\">\n            <form onSubmit={handleSubmit}>\n              <p className=\"h5 text-center mt-4 mb-4\">Add New Product</p>\n              <div className=\"grey-text\">\n                <MDBInput\n                  label=\"Name\"\n                  icon=\"user\"\n                  group\n                  type=\"text\"\n                  validate\n                  error=\"wrong\"\n                  success=\"right\"\n                  onChange={handleNameChange}\n                />\n                <MDBInput\n                  label=\"Brand\"\n                  icon=\"clone\"\n                  group\n                  type=\"text\"\n                  validate\n                  error=\"wrong\"\n                  success=\"right\"\n                  onChange={handleBrandChange}\n                />\n                <MDBInput\n                  label=\"Price\"\n                  icon=\"coins\"\n                  group\n                  type=\"number\"\n                  validate\n                  error=\"wrong\"\n                  success=\"right\"\n                  onChange={handlePriceChange}\n                />\n                <MDBInput\n                  label=\"image\"\n                  icon=\"image\"\n                  group\n                  type=\"text\"\n                  validate\n                  error=\"wrong\"\n                  success=\"right\"\n                  onChange={handleImageChange}\n                />\n                <MDBInput\n                  label=\"description\"\n                  icon=\"info\"\n                  group\n                  type=\"text\"\n                  validate\n                  error=\"wrong\"\n                  success=\"right\"\n                  onChange={handleDescriptionChange}\n                />\n              </div>\n              <div className=\"text-center\">\n                <MDBBtn className=\"btn btn-outline-black  my-4\" type=\"submit\">\n                  Submit\n                  <MDBIcon far icon=\"paper-plane\" className=\"ml-2\" />\n                </MDBBtn>\n              </div>\n            </form>\n          </MDBCol>\n        </MDBRow>\n      </MDBContainer>\n    </>\n  );\n};\n\nAddProduct.propTypes = {\n  createProduct: PropTypes.func.isRequired,\n};\n\nexport default connect(null, { createProduct })(AddProduct);\n"]},"metadata":{},"sourceType":"module"}