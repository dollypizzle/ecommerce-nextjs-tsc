{"ast":null,"code":"var __jsx = React.createElement;\n// import React, { useState, useEffect } from 'react';\n// import axios from '../../axios-order';\n// import Table from './Table';\n// import cookie from 'js-cookie';\n// import { MDBContainer } from 'mdbreact';\n// export interface IntProd {\n//   _id: string;\n//   image: string;\n//   name: string;\n//   brand: string;\n//   description: string;\n//   price: number;\n//   owner: string;\n// }\n// type ShowProps = {\n//   id: string;\n// };\n// export interface IntUser {\n//   _id: string;\n// }\n// const Show = ({ id }: ShowProps) => {\n//   const [product, setProduct] = useState<IntProd | null>(null);\n//   const [user, setUser] = useState<IntUser | null>(null);\n//   useEffect(() => {\n//     const authUser = cookie.get('user');\n//     if (authUser) {\n//       setUser(JSON.parse(authUser));\n//     }\n//   useEffect(() => {\n//     const authUser = cookie.get('user');\n//     if (authUser) {\n//       setUser(JSON.parse(authUser));\n//     }\n//     const fetchData = async () => {\n//       try {\n//         const response = await axios.get(`products/${id}`);\n//         setProduct(response.data);\n//       } catch (error) {\n//         console.log(error);\n//       }\n//     };\n//     fetchData();\n//   }, []);\n//   const tabRow = () => {\n//     return (\n//       product && (\n//         <Table obj={product} userId={user && user._id} key={product._id} />\n//       )\n//     );\n//   };\n//   return (\n//     <>\n//       <MDBContainer className=\"mt-3 text-center\">{tabRow()}</MDBContainer>\n//     </>\n//   );\n// };\n// export default Show;\nimport React, { useState, useEffect } from 'react';\nimport axios from '../../axios-order';\nimport Table from './Table';\nimport cookie from 'js-cookie';\nimport { MDBContainer } from 'mdbreact';\n\nconst Show = ({\n  id\n}) => {\n  const {\n    0: product,\n    1: setProduct\n  } = useState(null);\n  const {\n    0: user,\n    1: setUser\n  } = useState(null);\n  useEffect(() => {\n    const authUser = cookie.get('user');\n\n    if (authUser) {\n      setUser(JSON.parse(authUser));\n    }\n\n    const fecthData = async () => {\n      try {\n        const response = await axios.get(`/product/${id}`);\n        setProduct(response.data);\n      } catch (error) {\n        console.log(error);\n      }\n    };\n\n    fecthData();\n  }, []);\n\n  const tabRow = () => {\n    return product && __jsx(Table, {\n      obj: product,\n      userId: user && user._id,\n      key: product._id\n    });\n  };\n\n  return __jsx(React.Fragment, null, __jsx(MDBContainer, null, tabRow()), \";\");\n};\n\nexport default Show;","map":{"version":3,"sources":["/home/dolapo/ecommerce-nextjs-t/src/components/Products/Show.tsx"],"names":["React","useState","useEffect","axios","Table","cookie","MDBContainer","Show","id","product","setProduct","user","setUser","authUser","get","JSON","parse","fecthData","response","data","error","console","log","tabRow","_id"],"mappings":";AAAA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,KAAP,MAAkB,mBAAlB;AACA,OAAOC,KAAP,MAAkB,SAAlB;AACA,OAAOC,MAAP,MAAmB,WAAnB;AAEA,SAASC,YAAT,QAA6B,UAA7B;;AAoBA,MAAMC,IAAI,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAuB;AAClC,QAAM;AAAA,OAACC,OAAD;AAAA,OAAUC;AAAV,MAAwBT,QAAQ,CAAiB,IAAjB,CAAtC;AAEA,QAAM;AAAA,OAACU,IAAD;AAAA,OAAOC;AAAP,MAAkBX,QAAQ,CAAiB,IAAjB,CAAhC;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMW,QAAQ,GAAGR,MAAM,CAACS,GAAP,CAAW,MAAX,CAAjB;;AACA,QAAID,QAAJ,EAAc;AACZD,MAAAA,OAAO,CAACG,IAAI,CAACC,KAAL,CAAWH,QAAX,CAAD,CAAP;AACD;;AAED,UAAMI,SAAS,GAAG,YAAY;AAC5B,UAAI;AACF,cAAMC,QAAQ,GAAG,MAAMf,KAAK,CAACW,GAAN,CAAW,YAAWN,EAAG,EAAzB,CAAvB;AACAE,QAAAA,UAAU,CAACQ,QAAQ,CAACC,IAAV,CAAV;AACD,OAHD,CAGE,OAAOC,KAAP,EAAc;AACdC,QAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACD;AACF,KAPD;;AAQAH,IAAAA,SAAS;AACV,GAfQ,EAeN,EAfM,CAAT;;AAiBA,QAAMM,MAAM,GAAG,MAAM;AACnB,WACEd,OAAO,IACL,MAAC,KAAD;AAAO,MAAA,GAAG,EAAEA,OAAZ;AAAqB,MAAA,MAAM,EAAEE,IAAI,IAAIA,IAAI,CAACa,GAA1C;AAA+C,MAAA,GAAG,EAAEf,OAAO,CAACe;AAA5D,MAFJ;AAKD,GAND;;AAQA,SACE,4BACE,MAAC,YAAD,QAAeD,MAAM,EAArB,CADF,MADF;AAKD,CAnCD;;AAqCA,eAAehB,IAAf","sourcesContent":["// import React, { useState, useEffect } from 'react';\n// import axios from '../../axios-order';\n// import Table from './Table';\n// import cookie from 'js-cookie';\n// import { MDBContainer } from 'mdbreact';\n\n// export interface IntProd {\n//   _id: string;\n//   image: string;\n//   name: string;\n//   brand: string;\n//   description: string;\n//   price: number;\n//   owner: string;\n// }\n\n// type ShowProps = {\n//   id: string;\n// };\n\n// export interface IntUser {\n//   _id: string;\n// }\n\n// const Show = ({ id }: ShowProps) => {\n//   const [product, setProduct] = useState<IntProd | null>(null);\n\n//   const [user, setUser] = useState<IntUser | null>(null);\n\n//   useEffect(() => {\n//     const authUser = cookie.get('user');\n//     if (authUser) {\n//       setUser(JSON.parse(authUser));\n//     }\n\n//   useEffect(() => {\n//     const authUser = cookie.get('user');\n\n//     if (authUser) {\n//       setUser(JSON.parse(authUser));\n//     }\n//     const fetchData = async () => {\n//       try {\n//         const response = await axios.get(`products/${id}`);\n//         setProduct(response.data);\n//       } catch (error) {\n//         console.log(error);\n//       }\n//     };\n//     fetchData();\n//   }, []);\n\n//   const tabRow = () => {\n//     return (\n//       product && (\n//         <Table obj={product} userId={user && user._id} key={product._id} />\n//       )\n//     );\n//   };\n\n//   return (\n//     <>\n//       <MDBContainer className=\"mt-3 text-center\">{tabRow()}</MDBContainer>\n//     </>\n//   );\n// };\n\n// export default Show;\n\nimport React, { useState, useEffect } from 'react';\nimport axios from '../../axios-order';\nimport Table from './Table';\nimport cookie from 'js-cookie';\n\nimport { MDBContainer } from 'mdbreact';\n\nexport interface IntProd {\n  _id: string;\n  image: string;\n  name: string;\n  brand: string;\n  description: string;\n  price: number;\n  owner: string;\n}\n\ntype ShowProps = {\n  id: string;\n};\n\nexport interface IntUser {\n  _id: string;\n}\n\nconst Show = ({ id }: ShowProps) => {\n  const [product, setProduct] = useState<IntProd | null>(null);\n\n  const [user, setUser] = useState<IntUser | null>(null);\n\n  useEffect(() => {\n    const authUser = cookie.get('user');\n    if (authUser) {\n      setUser(JSON.parse(authUser));\n    }\n\n    const fecthData = async () => {\n      try {\n        const response = await axios.get(`/product/${id}`);\n        setProduct(response.data);\n      } catch (error) {\n        console.log(error);\n      }\n    };\n    fecthData();\n  }, []);\n\n  const tabRow = () => {\n    return (\n      product && (\n        <Table obj={product} userId={user && user._id} key={product._id} />\n      )\n    );\n  };\n\n  return (\n    <>\n      <MDBContainer>{tabRow()}</MDBContainer>;\n    </>\n  );\n};\n\nexport default Show;\n"]},"metadata":{},"sourceType":"module"}