{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime-corejs2/helpers/esm/toConsumableArray\";\nimport _objectSpread from \"@babel/runtime-corejs2/helpers/esm/objectSpread\";\nimport { ADD_TO_CART, REMOVE_ITEM, ADD_QUANTITY, SUB_QUANTITY } from '../actions/actionTypes';\nvar initState = {\n  addedItems: [],\n  total: 0\n};\n\nvar addCart = function addCart(state, action) {\n  var existed_item = state.addedItems.find(function (item) {\n    return action.data._id === item._id;\n  });\n\n  if (existed_item) {\n    action.data.quantity += 1;\n    return _objectSpread({}, state, {\n      total: state.total + action.data.price\n    });\n  } else {\n    action.data.quantity = 1; //calculating the total\n\n    var newTotal = state.total + action.data.price;\n    return _objectSpread({}, state, {\n      addedItems: [].concat(_toConsumableArray(state.addedItems), [action.data]),\n      total: newTotal\n    });\n  }\n};\n\nvar removeCart = function removeCart(state, action) {\n  var itemToRemove = state.addedItems.find(function (item) {\n    return action.id === item._id;\n  });\n  var new_items = state.addedItems.filter(function (item) {\n    return action.id !== item._id;\n  }); //calculating the total\n\n  var newTotal = state.total - itemToRemove.price * itemToRemove.quantity;\n  console.log(itemToRemove);\n  return _objectSpread({}, state, {\n    addedItems: new_items,\n    total: newTotal\n  });\n};\n\nvar increaseQuantity = function increaseQuantity(state, action) {\n  var addedItem = state.addedItems.find(function (item) {\n    return item._id === action.id;\n  });\n  addedItem.quantity += 1;\n  var newTotal = state.total + addedItem.price;\n  return _objectSpread({}, state, {\n    total: newTotal\n  });\n};\n\nvar decreaseQuantity = function decreaseQuantity(state, action) {\n  var addedItem = state.addedItems.find(function (item) {\n    return item._id === action.id;\n  }); //if the qt == 0 then it should be removed\n\n  if (addedItem.quantity === 1) {\n    var new_items = state.addedItems.filter(function (item) {\n      return item.id !== action.id;\n    });\n    var newTotal = state.total - addedItem.price;\n    return _objectSpread({}, state, {\n      addedItems: new_items,\n      total: newTotal\n    });\n  } else {\n    addedItem.quantity -= 1;\n\n    var _newTotal = state.total - addedItem.price;\n\n    return _objectSpread({}, state, {\n      total: _newTotal\n    });\n  }\n};\n\nvar cart = function cart() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case ADD_TO_CART:\n      return addCart(state, action);\n\n    case REMOVE_ITEM:\n      return removeCart(state, action);\n\n    case ADD_QUANTITY:\n      return increaseQuantity(state, action);\n\n    case SUB_QUANTITY:\n      return decreaseQuantity(state, action);\n\n    default:\n      return state;\n  }\n};\n\nexport default cart;","map":{"version":3,"sources":["/home/dolapo/codes/projects/ecommerce-nextjs-tsc/src/store/reducers/cart.ts"],"names":["ADD_TO_CART","REMOVE_ITEM","ADD_QUANTITY","SUB_QUANTITY","initState","addedItems","total","addCart","state","action","existed_item","find","item","data","_id","quantity","price","newTotal","removeCart","itemToRemove","id","new_items","filter","console","log","increaseQuantity","addedItem","decreaseQuantity","cart","type"],"mappings":"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","sourcesContent":["import {\n  ADD_TO_CART,\n  REMOVE_ITEM,\n  ADD_QUANTITY,\n  SUB_QUANTITY,\n} from '../actions/actionTypes';\n\nconst initState = {\n  addedItems: [],\n  total: 0,\n};\n\nconst addCart = (\n  state: { addedItems: any; total: any },\n  action: { data: { _id: string; quantity: number; price: string | number } }\n) => {\n  let existed_item = state.addedItems.find(\n    (item: { _id: string }) => action.data._id === item._id\n  );\n\n  if (existed_item) {\n    action.data.quantity += 1;\n    return {\n      ...state,\n      total: state.total + action.data.price,\n    };\n  } else {\n    action.data.quantity = 1;\n    //calculating the total\n    let newTotal = state.total + action.data.price;\n\n    return {\n      ...state,\n      addedItems: [...state.addedItems, action.data],\n      total: newTotal,\n    };\n  }\n};\n\nconst removeCart = (\n  state: { addedItems: any; total: any },\n  action: { id: any }\n) => {\n  let itemToRemove = state.addedItems.find(\n    (item: { _id: string }) => action.id === item._id\n  );\n  let new_items = state.addedItems.filter(\n    (item: { _id: string }) => action.id !== item._id\n  );\n\n  //calculating the total\n  let newTotal = state.total - itemToRemove.price * itemToRemove.quantity;\n  console.log(itemToRemove);\n  return {\n    ...state,\n    addedItems: new_items,\n    total: newTotal,\n  };\n};\n\nconst increaseQuantity = (\n  state: { addedItems: any; total: any },\n  action: { id: string }\n) => {\n  let addedItem = state.addedItems.find(\n    (item: { _id: string }) => item._id === action.id\n  );\n  addedItem.quantity += 1;\n  let newTotal = state.total + addedItem.price;\n  return {\n    ...state,\n    total: newTotal,\n  };\n};\n\nconst decreaseQuantity = (\n  state: { addedItems: any; total: any },\n  action: { id: any }\n) => {\n  let addedItem = state.addedItems.find(\n    (item: { _id: string }) => item._id === action.id\n  );\n  //if the qt == 0 then it should be removed\n  if (addedItem.quantity === 1) {\n    let new_items = state.addedItems.filter(\n      (item: { id: string }) => item.id !== action.id\n    );\n    let newTotal = state.total - addedItem.price;\n    return {\n      ...state,\n      addedItems: new_items,\n      total: newTotal,\n    };\n  } else {\n    addedItem.quantity -= 1;\n    let newTotal = state.total - addedItem.price;\n    return {\n      ...state,\n      total: newTotal,\n    };\n  }\n};\n\nconst cart = (\n  state = initState,\n  action: {\n    data: { _id: string; quantity: number; price: string | number };\n    id: string;\n    type?: string;\n  }\n) => {\n  switch (action.type) {\n    case ADD_TO_CART:\n      return addCart(state, action);\n    case REMOVE_ITEM:\n      return removeCart(state, action);\n    case ADD_QUANTITY:\n      return increaseQuantity(state, action);\n    case SUB_QUANTITY:\n      return decreaseQuantity(state, action);\n    default:\n      return state;\n  }\n};\n\nexport default cart;\n"]},"metadata":{},"sourceType":"module"}