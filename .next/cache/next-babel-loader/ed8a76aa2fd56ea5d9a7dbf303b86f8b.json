{"ast":null,"code":"var __jsx = React.createElement;\nimport React, { useState } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { createProduct } from '../../store/actions/productActions';\nimport Router from 'next/router';\nimport { MDBContainer, MDBRow, MDBCol, MDBBtn, MDBInput, MDBIcon } from 'mdbreact';\nexport const AddProduct = props => {\n  const {\n    0: name,\n    1: setName\n  } = useState('');\n  const {\n    0: brand,\n    1: setBrand\n  } = useState('');\n  const {\n    0: price,\n    1: setPrice\n  } = useState('');\n  const {\n    0: image,\n    1: setImage\n  } = useState('');\n  const {\n    0: description,\n    1: setDescription\n  } = useState('');\n\n  const handleNameChange = event => setName(event.currentTarget.value);\n\n  const handleBrandChange = event => setBrand(event.currentTarget.value);\n\n  const handlePriceChange = event => setPrice(event.currentTarget.value);\n\n  const handleImageChange = event => setImage(event.currentTarget.value);\n\n  const handleDescriptionChange = event => setDescription(event.currentTarget.value);\n\n  const handleSubmit = async event => {\n    event.preventDefault();\n    const data = {\n      name,\n      brand,\n      price,\n      image,\n      description\n    };\n\n    try {\n      await props.createProduct(data);\n      Router.push('/products');\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  return __jsx(React.Fragment, null, __jsx(MDBContainer, {\n    className: \"px-5\"\n  }, __jsx(MDBRow, {\n    className: \"d-flex justify-content-center\"\n  }, __jsx(MDBCol, {\n    className: \"card mt-3\",\n    sm: \"12\",\n    md: \"8\",\n    lg: \"6\"\n  }, __jsx(\"form\", {\n    onSubmit: handleSubmit\n  }, __jsx(\"p\", {\n    className: \"h5 text-center mt-4 mb-4\"\n  }, \"Add New Product\"), __jsx(\"div\", {\n    className: \"grey-text\"\n  }, __jsx(MDBInput, {\n    label: \"Name\",\n    icon: \"user\",\n    group: true,\n    type: \"text\",\n    validate: true,\n    error: \"wrong\",\n    success: \"right\",\n    onChange: handleNameChange\n  }), __jsx(MDBInput, {\n    label: \"Brand\",\n    icon: \"clone\",\n    group: true,\n    type: \"text\",\n    validate: true,\n    error: \"wrong\",\n    success: \"right\",\n    onChange: handleBrandChange\n  }), __jsx(MDBInput, {\n    label: \"Price\",\n    icon: \"coins\",\n    group: true,\n    type: \"number\",\n    validate: true,\n    error: \"wrong\",\n    success: \"right\",\n    onChange: handlePriceChange\n  }), __jsx(MDBInput, {\n    label: \"image\",\n    icon: \"image\",\n    group: true,\n    type: \"text\",\n    validate: true,\n    error: \"wrong\",\n    success: \"right\",\n    onChange: handleImageChange\n  }), __jsx(MDBInput, {\n    label: \"description\",\n    icon: \"info\",\n    group: true,\n    type: \"text\",\n    validate: true,\n    error: \"wrong\",\n    success: \"right\",\n    onChange: handleDescriptionChange\n  })), __jsx(\"div\", {\n    className: \"text-center\"\n  }, __jsx(MDBBtn, {\n    className: \"btn btn-outline-black  my-4\",\n    type: \"submit\"\n  }, \"Submit\", __jsx(MDBIcon, {\n    far: true,\n    icon: \"paper-plane\",\n    className: \"ml-2\"\n  }))))))));\n};\nAddProduct.propTypes = {\n  createProduct: PropTypes.func.isRequired\n};\nexport default connect(null, {\n  createProduct\n})(AddProduct);","map":{"version":3,"sources":["/home/dolapo/ecommerce-nextjs-t/src/components/Products/AddProduct.tsx"],"names":["React","useState","connect","PropTypes","createProduct","Router","MDBContainer","MDBRow","MDBCol","MDBBtn","MDBInput","MDBIcon","AddProduct","props","name","setName","brand","setBrand","price","setPrice","image","setImage","description","setDescription","handleNameChange","event","currentTarget","value","handleBrandChange","handlePriceChange","handleImageChange","handleDescriptionChange","handleSubmit","preventDefault","data","push","error","console","log","propTypes","func","isRequired"],"mappings":"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","sourcesContent":["import React, { useState, SyntheticEvent, FormEvent } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { createProduct } from '../../store/actions/productActions';\nimport Router from 'next/router';\nimport {\n  MDBContainer,\n  MDBRow,\n  MDBCol,\n  MDBBtn,\n  MDBInput,\n  MDBIcon,\n} from 'mdbreact';\n\nexport const AddProduct = (props: {\n  createProduct: (arg0: {\n    name: string;\n    brand: string;\n    price: string;\n    image: string;\n    description: string;\n  }) => void;\n}) => {\n  const [name, setName] = useState<string>('');\n  const [brand, setBrand] = useState<string>('');\n  const [price, setPrice] = useState<string>('');\n  const [image, setImage] = useState<string>('');\n  const [description, setDescription] = useState<string>('');\n\n  const handleNameChange = (event: FormEvent<HTMLInputElement>) =>\n    setName(event.currentTarget.value);\n\n  const handleBrandChange = (event: FormEvent<HTMLInputElement>) =>\n    setBrand(event.currentTarget.value);\n\n  const handlePriceChange = (event: FormEvent<HTMLInputElement>) =>\n    setPrice(event.currentTarget.value);\n\n  const handleImageChange = (event: FormEvent<HTMLInputElement>) =>\n    setImage(event.currentTarget.value);\n\n  const handleDescriptionChange = (event: FormEvent<HTMLInputElement>) =>\n    setDescription(event.currentTarget.value);\n\n  const handleSubmit = async (event: SyntheticEvent) => {\n    event.preventDefault();\n    const data = {\n      name,\n      brand,\n      price,\n      image,\n      description,\n    };\n\n    try {\n      await props.createProduct(data);\n      Router.push('/products');\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  return (\n    <>\n      <MDBContainer className=\"px-5\">\n        <MDBRow className=\"d-flex justify-content-center\">\n          <MDBCol className=\"card mt-3\" sm=\"12\" md=\"8\" lg=\"6\">\n            <form onSubmit={handleSubmit}>\n              <p className=\"h5 text-center mt-4 mb-4\">Add New Product</p>\n              <div className=\"grey-text\">\n                <MDBInput\n                  label=\"Name\"\n                  icon=\"user\"\n                  group\n                  type=\"text\"\n                  validate\n                  error=\"wrong\"\n                  success=\"right\"\n                  onChange={handleNameChange}\n                />\n                <MDBInput\n                  label=\"Brand\"\n                  icon=\"clone\"\n                  group\n                  type=\"text\"\n                  validate\n                  error=\"wrong\"\n                  success=\"right\"\n                  onChange={handleBrandChange}\n                />\n                <MDBInput\n                  label=\"Price\"\n                  icon=\"coins\"\n                  group\n                  type=\"number\"\n                  validate\n                  error=\"wrong\"\n                  success=\"right\"\n                  onChange={handlePriceChange}\n                />\n                <MDBInput\n                  label=\"image\"\n                  icon=\"image\"\n                  group\n                  type=\"text\"\n                  validate\n                  error=\"wrong\"\n                  success=\"right\"\n                  onChange={handleImageChange}\n                />\n                <MDBInput\n                  label=\"description\"\n                  icon=\"info\"\n                  group\n                  type=\"text\"\n                  validate\n                  error=\"wrong\"\n                  success=\"right\"\n                  onChange={handleDescriptionChange}\n                />\n              </div>\n              <div className=\"text-center\">\n                <MDBBtn className=\"btn btn-outline-black  my-4\" type=\"submit\">\n                  Submit\n                  <MDBIcon far icon=\"paper-plane\" className=\"ml-2\" />\n                </MDBBtn>\n              </div>\n            </form>\n          </MDBCol>\n        </MDBRow>\n      </MDBContainer>\n    </>\n  );\n};\n\nAddProduct.propTypes = {\n  createProduct: PropTypes.func.isRequired,\n};\n\nexport default connect(null, { createProduct })(AddProduct);\n"]},"metadata":{},"sourceType":"module"}