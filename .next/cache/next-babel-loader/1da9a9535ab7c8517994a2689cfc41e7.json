{"ast":null,"code":"var __jsx = React.createElement;\nimport React from \"react\";\nimport Link from \"next/link\";\nimport { connect } from \"react-redux\";\nimport { addToCart as _addToCart } from \"../../store/actions/cartActions\";\nimport { MDBBtn, MDBCol, MDBIcon, MDBCard, MDBCardBody, MDBCardImage, MDBCardTitle, MDBCardFooter } from \"mdbreact\";\n\nvar Body = function Body(props) {\n  var handleClick = function handleClick(product) {\n    props.addToCart(product);\n    alert(\"Item added to cart!\");\n  };\n\n  return __jsx(MDBCol, {\n    className: \"col-md-3 pb-1\"\n  }, __jsx(MDBCard, {\n    className: \"mb-lg-0 mb-4 pb-2\",\n    style: {\n      maxHeight: \"34rem\"\n    },\n    ecommerce: true,\n    wide: true\n  }, __jsx(MDBCardImage, {\n    cascade: true,\n    top: true,\n    alt: \"\",\n    src: props.obj.image,\n    waves: true\n  }), __jsx(\"hr\", null), __jsx(MDBCardBody, {\n    cascade: true,\n    className: \"text-center\"\n  }, __jsx(MDBCardTitle, null, __jsx(\"p\", null, __jsx(\"strong\", null, props.obj.name))), \" \", __jsx(MDBBtn, {\n    color: \"black\"\n  }, __jsx(Link, {\n    href: \"/product?id=\".concat(props.obj._id),\n    as: \"/product/\".concat(props.obj._id)\n  }, __jsx(\"a\", {\n    className: \"text-light\"\n  }, \"More Info\"))), __jsx(MDBCardFooter, null, __jsx(\"span\", {\n    className: \"float-left\"\n  }, \"Price: \\u20A6\", props.obj.price), __jsx(\"span\", {\n    className: \"float-right\"\n  }, __jsx(MDBBtn, {\n    tag: \"a\",\n    onClick: function onClick() {\n      handleClick(props.obj);\n    },\n    size: \"lg\",\n    className: \"p-1 m-0 mr-2 z-depth-0\"\n  }, __jsx(MDBIcon, {\n    icon: \"shopping-cart\"\n  })))))));\n};\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return {\n    addToCart: function addToCart(product) {\n      dispatch(_addToCart(product));\n    }\n  };\n};\n\nexport default connect(null, mapDispatchToProps)(Body);","map":{"version":3,"sources":["/home/dolapo/ecommerce-nextjs-t/src/components/Products/Body.tsx"],"names":["React","Link","connect","addToCart","MDBBtn","MDBCol","MDBIcon","MDBCard","MDBCardBody","MDBCardImage","MDBCardTitle","MDBCardFooter","Body","props","handleClick","product","alert","maxHeight","obj","image","name","_id","price","mapDispatchToProps","dispatch"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,IAAP,MAAiB,WAAjB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,SAAS,IAATA,UAAT,QAA0B,iCAA1B;AACA,SACEC,MADF,EAEEC,MAFF,EAGEC,OAHF,EAIEC,OAJF,EAKEC,WALF,EAMEC,YANF,EAOEC,YAPF,EAQEC,aARF,QASO,UATP;;AAyBA,IAAMC,IAAI,GAAG,SAAPA,IAAO,CAACC,KAAD,EAAqB;AAChC,MAAMC,WAAW,GAAG,SAAdA,WAAc,CAACC,OAAD,EAAmB;AACrCF,IAAAA,KAAK,CAACV,SAAN,CAAgBY,OAAhB;AACAC,IAAAA,KAAK,CAAC,qBAAD,CAAL;AACD,GAHD;;AAIA,SACE,MAAC,MAAD;AAAQ,IAAA,SAAS,EAAC;AAAlB,KACE,MAAC,OAAD;AACE,IAAA,SAAS,EAAC,mBADZ;AAEE,IAAA,KAAK,EAAE;AAAEC,MAAAA,SAAS,EAAE;AAAb,KAFT;AAGE,IAAA,SAAS,MAHX;AAIE,IAAA,IAAI;AAJN,KAME,MAAC,YAAD;AAAc,IAAA,OAAO,MAArB;AAAsB,IAAA,GAAG,MAAzB;AAA0B,IAAA,GAAG,EAAC,EAA9B;AAAiC,IAAA,GAAG,EAAEJ,KAAK,CAACK,GAAN,CAAUC,KAAhD;AAAuD,IAAA,KAAK;AAA5D,IANF,EAOE,iBAPF,EAQE,MAAC,WAAD;AAAa,IAAA,OAAO,MAApB;AAAqB,IAAA,SAAS,EAAC;AAA/B,KACE,MAAC,YAAD,QACE,iBACE,sBAASN,KAAK,CAACK,GAAN,CAAUE,IAAnB,CADF,CADF,CADF,EAKkB,GALlB,EAME,MAAC,MAAD;AAAQ,IAAA,KAAK,EAAC;AAAd,KACE,MAAC,IAAD;AACE,IAAA,IAAI,wBAAiBP,KAAK,CAACK,GAAN,CAAUG,GAA3B,CADN;AAEE,IAAA,EAAE,qBAAcR,KAAK,CAACK,GAAN,CAAUG,GAAxB;AAFJ,KAIE;AAAG,IAAA,SAAS,EAAC;AAAb,iBAJF,CADF,CANF,EAcE,MAAC,aAAD,QACE;AAAM,IAAA,SAAS,EAAC;AAAhB,sBAAsCR,KAAK,CAACK,GAAN,CAAUI,KAAhD,CADF,EAEE;AAAM,IAAA,SAAS,EAAC;AAAhB,KACE,MAAC,MAAD;AACE,IAAA,GAAG,EAAC,GADN;AAEE,IAAA,OAAO,EAAE,mBAAM;AACbR,MAAAA,WAAW,CAACD,KAAK,CAACK,GAAP,CAAX;AACD,KAJH;AAKE,IAAA,IAAI,EAAC,IALP;AAME,IAAA,SAAS,EAAC;AANZ,KAQE,MAAC,OAAD;AAAS,IAAA,IAAI,EAAC;AAAd,IARF,CADF,CAFF,CAdF,CARF,CADF,CADF;AA2CD,CAhDD;;AAkDA,IAAMK,kBAAkB,GAAG,SAArBA,kBAAqB,CACzBC,QADyB,EAEtB;AACH,SAAO;AACLrB,IAAAA,SAAS,EAAE,mBAACY,OAAD,EAAiB;AAC1BS,MAAAA,QAAQ,CAACrB,UAAS,CAACY,OAAD,CAAV,CAAR;AACD;AAHI,GAAP;AAKD,CARD;;AAUA,eAAeb,OAAO,CAAC,IAAD,EAAOqB,kBAAP,CAAP,CAAkCX,IAAlC,CAAf","sourcesContent":["import React from \"react\";\nimport Link from \"next/link\";\nimport { connect } from \"react-redux\";\nimport { addToCart } from \"../../store/actions/cartActions\";\nimport {\n  MDBBtn,\n  MDBCol,\n  MDBIcon,\n  MDBCard,\n  MDBCardBody,\n  MDBCardImage,\n  MDBCardTitle,\n  MDBCardFooter,\n} from \"mdbreact\";\n\ntype Prod = {\n  _id: string;\n  name: string;\n  image: string;\n  price: number;\n  brand: string;\n  description: string;\n};\n\nexport interface IntProps {\n  [x: string]: any;\n  obj: Prod;\n}\n\nconst Body = (props: IntProps) => {\n  const handleClick = (product: Prod) => {\n    props.addToCart(product);\n    alert(\"Item added to cart!\");\n  };\n  return (\n    <MDBCol className=\"col-md-3 pb-1\">\n      <MDBCard\n        className=\"mb-lg-0 mb-4 pb-2\"\n        style={{ maxHeight: \"34rem\" }}\n        ecommerce\n        wide\n      >\n        <MDBCardImage cascade top alt=\"\" src={props.obj.image} waves />\n        <hr />\n        <MDBCardBody cascade className=\"text-center\">\n          <MDBCardTitle>\n            <p>\n              <strong>{props.obj.name}</strong>\n            </p>\n          </MDBCardTitle>{\" \"}\n          <MDBBtn color=\"black\">\n            <Link\n              href={`/product?id=${props.obj._id}`}\n              as={`/product/${props.obj._id}`}\n            >\n              <a className=\"text-light\">More Info</a>\n            </Link>\n          </MDBBtn>\n          <MDBCardFooter>\n            <span className=\"float-left\">Price: â‚¦{props.obj.price}</span>\n            <span className=\"float-right\">\n              <MDBBtn\n                tag=\"a\"\n                onClick={() => {\n                  handleClick(props.obj);\n                }}\n                size=\"lg\"\n                className=\"p-1 m-0 mr-2 z-depth-0\"\n              >\n                <MDBIcon icon=\"shopping-cart\" />\n              </MDBBtn>\n            </span>\n          </MDBCardFooter>\n        </MDBCardBody>\n      </MDBCard>\n    </MDBCol>\n  );\n};\n\nconst mapDispatchToProps = (\n  dispatch: (arg0: { type: string; data: {} }) => void\n) => {\n  return {\n    addToCart: (product: {}) => {\n      dispatch(addToCart(product));\n    },\n  };\n};\n\nexport default connect(null, mapDispatchToProps)(Body);\n"]},"metadata":{},"sourceType":"module"}