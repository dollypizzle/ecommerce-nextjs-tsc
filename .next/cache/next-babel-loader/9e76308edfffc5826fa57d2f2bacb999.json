{"ast":null,"code":"import _taggedTemplateLiteral from \"@babel/runtime-corejs2/helpers/esm/taggedTemplateLiteral\";\nvar __jsx = React.createElement;\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n    td {\\n      vertical-align: middle;\\n    }\\n  \"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport React, { useState } from 'react';\nimport { connect } from 'react-redux';\nimport styled from 'styled-components';\nimport { MDBContainer, MDBRow, MDBCol, MDBTable, MDBTableHead, MDBTableBody, MDBInput, MDBCardBody, MDBBtn } from 'mdbreact';\n\nvar CheckOut = function CheckOut(props) {\n  var cart = props.cart;\n  var ProductTable = styled(MDBTable)(_templateObject());\n\n  var _useState = useState([{\n    label: 'Product',\n    field: 'product'\n  }, {\n    label: 'QTY',\n    field: 'qty'\n  }, {\n    label: 'AMT',\n    field: 'amount'\n  }]),\n      column = _useState[0];\n\n  var rows = [];\n  cart.addedItems.map(function (item) {\n    return rows.push({\n      product: [__jsx(\"h5\", {\n        className: \"mt-3\"\n      }, __jsx(\"strong\", null, item.name))],\n      qty: \"\".concat(item.quantity),\n      amount: __jsx(\"strong\", null, \"\\u20A6\", (item.quantity * item.price).toFixed(2).replace(/\\d(?=(\\d{3})+\\.)/g, '$&,'))\n    });\n  });\n  return __jsx(MDBContainer, null, __jsx(\"div\", null), __jsx(MDBRow, null, __jsx(MDBCol, {\n    md: \"6\",\n    className: \"card mt-4 px-2\"\n  }, __jsx(\"h4\", {\n    className: \"text-center mt-1\"\n  }, \"Checkout\"), __jsx(\"form\", null, __jsx(\"div\", {\n    className: \"grey-text\"\n  }, __jsx(MDBInput, {\n    label: \"First Name\",\n    icon: \"user\",\n    group: true,\n    type: \"text\",\n    validate: true,\n    error: \"wrong\",\n    success: \"right\"\n  }), __jsx(MDBInput, {\n    label: \"Last Name\",\n    icon: \"user\",\n    group: true,\n    type: \"text\",\n    validate: true,\n    error: \"wrong\",\n    success: \"right\"\n  }), __jsx(MDBInput, {\n    label: \"Email\",\n    icon: \"envelope\",\n    group: true,\n    type: \"email\",\n    validate: true,\n    error: \"wrong\",\n    success: \"right\"\n  }), __jsx(MDBInput, {\n    label: \"Shipping Address\",\n    icon: \"tag\",\n    group: true,\n    type: \"text\",\n    validate: true,\n    error: \"wrong\",\n    success: \"right\"\n  })))), __jsx(MDBCol, {\n    md: \"6\"\n  }, __jsx(\"h4\", {\n    className: \"text-center mt-4\"\n  }, \"Your Order Summary\"), __jsx(MDBCardBody, null, __jsx(ProductTable, {\n    className: \"product-table\",\n    responsive: true\n  }, __jsx(MDBTableHead, {\n    className: \"font-weight-bold\",\n    color: \"mdb-color lighten-5\",\n    columns: column\n  }), __jsx(MDBTableBody, {\n    rows: rows\n  })), __jsx(\"div\", null, __jsx(MDBBtn, {\n    color: \"success\"\n  }, __jsx(\"a\", {\n    href: \"/pay\",\n    className: \"text-reset\"\n  }, \"Pay: \\u20A6\", cart.total.toFixed(2).replace(/\\d(?=(\\d{3})+\\.)/g, '$&,'))))))));\n};\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    cart: state.cart\n  };\n};\n\nexport default connect(mapStateToProps, null)(CheckOut);","map":{"version":3,"sources":["/home/dolapo/ecommerce-nextjs-t/src/components/Form/Checkout.tsx"],"names":["React","useState","connect","styled","MDBContainer","MDBRow","MDBCol","MDBTable","MDBTableHead","MDBTableBody","MDBInput","MDBCardBody","MDBBtn","CheckOut","props","cart","ProductTable","label","field","column","rows","addedItems","map","item","push","product","name","qty","quantity","amount","price","toFixed","replace","total","mapStateToProps","state"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport { connect } from 'react-redux';\nimport styled from 'styled-components';\nimport { IntProps } from '../Products/Body';\n\nimport {\n  MDBContainer,\n  MDBRow,\n  MDBCol,\n  MDBTable,\n  MDBTableHead,\n  MDBTableBody,\n  MDBInput,\n  MDBCardBody,\n  MDBBtn,\n} from 'mdbreact';\n\nconst CheckOut = (props: IntProps) => {\n  const cart = props.cart;\n\n  const ProductTable = styled(MDBTable)`\n    td {\n      vertical-align: middle;\n    }\n  `;\n\n  const [column] = useState([\n    {\n      label: 'Product',\n      field: 'product',\n    },\n    {\n      label: 'QTY',\n      field: 'qty',\n    },\n    {\n      label: 'AMT',\n      field: 'amount',\n    },\n  ]);\n\n  const rows:\n    | {\n        [rest: string]: any;\n        clickEvent?: (() => void) | undefined;\n        colspan?: number | undefined;\n      }[]\n    | { product: JSX.Element[]; qty: string; amount: JSX.Element }[]\n    | undefined = [];\n  cart.addedItems.map(\n    (item: { name: React.ReactNode; quantity: number; price: number }) => {\n      return rows.push({\n        product: [\n          <h5 className=\"mt-3\">\n            <strong>{item.name}</strong>\n          </h5>,\n        ],\n        qty: `${item.quantity}`,\n        amount: (\n          <strong>\n            ₦\n            {(item.quantity * item.price)\n              .toFixed(2)\n              .replace(/\\d(?=(\\d{3})+\\.)/g, '$&,')}\n          </strong>\n        ),\n      });\n    }\n  );\n\n  return (\n    <MDBContainer>\n      <div></div>\n      <MDBRow>\n        <MDBCol md=\"6\" className=\"card mt-4 px-2\">\n          <h4 className=\"text-center mt-1\">Checkout</h4>\n          <form>\n            <div className=\"grey-text\">\n              <MDBInput\n                label=\"First Name\"\n                icon=\"user\"\n                group\n                type=\"text\"\n                validate\n                error=\"wrong\"\n                success=\"right\"\n              />\n              <MDBInput\n                label=\"Last Name\"\n                icon=\"user\"\n                group\n                type=\"text\"\n                validate\n                error=\"wrong\"\n                success=\"right\"\n              />\n              <MDBInput\n                label=\"Email\"\n                icon=\"envelope\"\n                group\n                type=\"email\"\n                validate\n                error=\"wrong\"\n                success=\"right\"\n              />\n              <MDBInput\n                label=\"Shipping Address\"\n                icon=\"tag\"\n                group\n                type=\"text\"\n                validate\n                error=\"wrong\"\n                success=\"right\"\n              />\n            </div>\n          </form>\n        </MDBCol>\n        <MDBCol md=\"6\">\n          <h4 className=\"text-center mt-4\">Your Order Summary</h4>\n          <MDBCardBody>\n            <ProductTable className=\"product-table\" responsive>\n              <MDBTableHead\n                className=\"font-weight-bold\"\n                color=\"mdb-color lighten-5\"\n                columns={column}\n              />\n              <MDBTableBody rows={rows} />\n            </ProductTable>\n            <div>\n              <MDBBtn color=\"success\">\n                <a href=\"/pay\" className=\"text-reset\">\n                  Pay: ₦\n                  {cart.total.toFixed(2).replace(/\\d(?=(\\d{3})+\\.)/g, '$&,')}\n                </a>\n              </MDBBtn>\n            </div>\n          </MDBCardBody>\n        </MDBCol>\n      </MDBRow>\n    </MDBContainer>\n  );\n};\n\nconst mapStateToProps = (state: { cart: any }) => {\n  return {\n    cart: state.cart,\n  };\n};\n\nexport default connect(mapStateToProps, null)(CheckOut);\n"]},"metadata":{},"sourceType":"module"}