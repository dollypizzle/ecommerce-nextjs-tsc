{"ast":null,"code":"var __jsx = React.createElement;\nimport React, { useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport styled from \"styled-components\";\nimport Link from \"next/link\";\nimport cookie from \"js-cookie\";\nimport { removeItem, addQuantity, subtractQuantity } from \"../../store/actions/cartActions\";\nimport { MDBRow, MDBCol, MDBCard, MDBCardBody, MDBTable, MDBTableBody, MDBTableHead, MDBBtn } from \"mdbreact\";\nconst ImgCart = styled.img`\n  max-height: 150px;\n  min-width: 50px;\n`;\nconst Btn = styled(MDBBtn)`\n  border-radius: 2px;\n`;\nconst Boot = styled.div`\n  padding-bottom: 10em;\n`;\nconst ProductTable = styled(MDBTable)`\n  td {\n    vertical-align: middle;\n    &:nth-child(6) {\n      display: flex;\n      flex-direction: column;\n      align-items: flex-end;\n    }\n  }\n`;\nexport const Cart = props => {\n  const handleRemove = product => {\n    props.removeItem(product);\n  }; //to add the quantity\n\n\n  const handleAddQuantity = product => {\n    props.addQuantity(product);\n  }; //to substract from the quantity\n\n\n  const handleSubtractQuantity = product => {\n    props.subtractQuantity(product);\n  };\n\n  const cart = props.cart;\n  const {\n    0: cols\n  } = useState([{\n    label: \"\",\n    field: \"img\"\n  }, {\n    label: \"Product\",\n    field: \"product\"\n  }, {\n    label: \"Price\",\n    field: \"price\"\n  }, {\n    label: \"QTY\",\n    field: \"qty\"\n  }, {\n    label: \"Amount\",\n    field: \"amount\"\n  }, {\n    label: \"\",\n    field: \"button\"\n  }]);\n  const rows = [];\n  cart.addedItems.map(item => {\n    return rows.push({\n      img: __jsx(ImgCart, {\n        src: item.image,\n        alt: \"\",\n        className: \"img-fluid z-depth-0\"\n      }),\n      product: [__jsx(\"h5\", {\n        className: \"mt-3\"\n      }, __jsx(\"strong\", null, item.name))],\n      price: `â‚¦${item.price.toFixed(2).replace(/\\d(?=(\\d{3})+\\.)/g, \"$&,\")}`,\n      qty: `${item.quantity}`,\n      amount: __jsx(\"strong\", null, \"\\u20A6\", (item.quantity * item.price).toFixed(2).replace(/\\d(?=(\\d{3})+\\.)/g, \"$&,\")),\n      button: __jsx(React.Fragment, null, __jsx(MDBBtn, {\n        title: \"Increase quantity\",\n        color: \"success\",\n        size: \"sm\",\n        onClick: () => {\n          handleAddQuantity(item._id);\n        }\n      }, __jsx(\"i\", {\n        className: \"fas fa-plus-circle\"\n      })), __jsx(MDBBtn, {\n        title: \"Decrease quantity\",\n        color: \"info\",\n        size: \"sm\",\n        disbaled: item.quantity === 1,\n        onClick: () => {\n          handleSubtractQuantity(item._id);\n        }\n      }, __jsx(\"i\", {\n        className: \"fas fa-minus-circle\"\n      })), __jsx(MDBBtn, {\n        title: \"Remove item\",\n        color: \"danger\",\n        size: \"sm\",\n        onClick: () => {\n          handleRemove(item._id);\n        }\n      }, __jsx(\"i\", {\n        className: \"fas fa-trash\"\n      })))\n    });\n  });\n  const user = cookie.get(\"jwtToken\");\n\n  const userLinks = __jsx(Btn, {\n    color: \"success\"\n  }, __jsx(Link, {\n    href: \"/checkout\"\n  }, __jsx(\"a\", {\n    className: \"text-reset\"\n  }, \"Proceed to Checkout\")));\n\n  const guestLinks = __jsx(Btn, {\n    color: \"success\"\n  }, __jsx(Link, {\n    href: \"/login\"\n  }, __jsx(\"a\", {\n    className: \"text-reset\"\n  }, \"Proceed to Checkout\")));\n\n  return cart.addedItems.length > 0 ? __jsx(React.Fragment, null, __jsx(MDBRow, {\n    className: \"my-2 ml-3 mr-1 mb-4\",\n    center: true\n  }, __jsx(MDBCol, null, __jsx(MDBCard, {\n    className: \"w-100\"\n  }, __jsx(MDBCardBody, null, __jsx(ProductTable, {\n    className: \"product-table\",\n    responsive: true\n  }, __jsx(MDBTableHead, {\n    className: \"font-weight-bold\",\n    color: \"mdb-color lighten-5\",\n    columns: cols\n  }), __jsx(MDBTableBody, {\n    rows: rows\n  })))), __jsx(\"div\", {\n    className: \"text-center indigo-text\"\n  }, __jsx(\"h2\", {\n    className: \"my-4\"\n  }, __jsx(\"strong\", null, \"Total:\"), \" \\u20A6\", cart.total.toFixed(2).replace(/\\d(?=(\\d{3})+\\.)/g, \"$&,\")), __jsx(Btn, {\n    className: \"mr-3\"\n  }, __jsx(Link, {\n    href: \"/products\"\n  }, __jsx(\"a\", {\n    className: \"text-reset\"\n  }, \"Continue Shopping\"))), user ? userLinks : guestLinks)))) : __jsx(React.Fragment, null, __jsx(\"h3\", {\n    className: \"text-center\",\n    style: {\n      marginTop: \"212px\",\n      marginBottom: \"211px\"\n    }\n  }, __jsx(\"strong\", null, \"Your cart is empty\")));\n};\n\nconst mapStateToProps = state => {\n  return {\n    cart: state.cart\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    removeItem: product => {\n      dispatch(removeItem(product));\n    },\n    addQuantity: product => {\n      dispatch(addQuantity(product));\n    },\n    subtractQuantity: product => {\n      dispatch(subtractQuantity(product));\n    }\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Cart);","map":{"version":3,"sources":["/home/dolapo/ecommerce-nextjs-t/src/components/Products/Cart.tsx"],"names":["React","useState","connect","styled","Link","cookie","removeItem","addQuantity","subtractQuantity","MDBRow","MDBCol","MDBCard","MDBCardBody","MDBTable","MDBTableBody","MDBTableHead","MDBBtn","ImgCart","img","Btn","Boot","div","ProductTable","Cart","props","handleRemove","product","handleAddQuantity","handleSubtractQuantity","cart","cols","label","field","rows","addedItems","map","item","push","image","name","price","toFixed","replace","qty","quantity","amount","button","_id","user","get","userLinks","guestLinks","length","total","marginTop","marginBottom","mapStateToProps","state","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport styled from \"styled-components\";\nimport Link from \"next/link\";\nimport { IntProps } from \"../Products/Body\";\nimport cookie from \"js-cookie\";\n\nimport {\n  removeItem,\n  addQuantity,\n  subtractQuantity,\n} from \"../../store/actions/cartActions\";\n\nimport {\n  MDBRow,\n  MDBCol,\n  MDBCard,\n  MDBCardBody,\n  MDBTable,\n  MDBTableBody,\n  MDBTableHead,\n  MDBBtn,\n} from \"mdbreact\";\n\nconst ImgCart = styled.img`\n  max-height: 150px;\n  min-width: 50px;\n`;\n\nconst Btn = styled(MDBBtn)`\n  border-radius: 2px;\n`;\n\nconst Boot = styled.div`\n  padding-bottom: 10em;\n`;\n\nconst ProductTable = styled(MDBTable)`\n  td {\n    vertical-align: middle;\n    &:nth-child(6) {\n      display: flex;\n      flex-direction: column;\n      align-items: flex-end;\n    }\n  }\n`;\n\nexport const Cart = (props: IntProps) => {\n  const handleRemove = (product: {}) => {\n    props.removeItem(product);\n  };\n  //to add the quantity\n  const handleAddQuantity = (product: {}) => {\n    props.addQuantity(product);\n  };\n  //to substract from the quantity\n  const handleSubtractQuantity = (product: {}) => {\n    props.subtractQuantity(product);\n  };\n\n  const cart = props.cart;\n\n  const [cols] = useState([\n    {\n      label: \"\",\n      field: \"img\",\n    },\n    {\n      label: \"Product\",\n      field: \"product\",\n    },\n\n    {\n      label: \"Price\",\n      field: \"price\",\n    },\n    {\n      label: \"QTY\",\n      field: \"qty\",\n    },\n    {\n      label: \"Amount\",\n      field: \"amount\",\n    },\n    {\n      label: \"\",\n      field: \"button\",\n    },\n  ]);\n\n  const rows:\n    | {\n        [rest: string]: any;\n        clickEvent?: (() => void) | undefined;\n        colspan?: number | undefined;\n      }[]\n    | {\n        img: JSX.Element;\n        product: JSX.Element[];\n        price: string;\n        qty: string;\n        amount: JSX.Element;\n        button: JSX.Element;\n      }[]\n    | undefined = [];\n  cart.addedItems.map(\n    (item: {\n      image: string | undefined;\n      name: React.ReactNode;\n      price: number;\n      quantity: number;\n      _id: {};\n    }) => {\n      return rows.push({\n        img: (\n          <ImgCart src={item.image} alt=\"\" className=\"img-fluid z-depth-0\" />\n        ),\n\n        product: [\n          <h5 className=\"mt-3\">\n            <strong>{item.name}</strong>\n          </h5>,\n        ],\n        price: `â‚¦${item.price.toFixed(2).replace(/\\d(?=(\\d{3})+\\.)/g, \"$&,\")}`,\n        qty: `${item.quantity}`,\n        amount: (\n          <strong>\n            â‚¦\n            {(item.quantity * item.price)\n              .toFixed(2)\n              .replace(/\\d(?=(\\d{3})+\\.)/g, \"$&,\")}\n          </strong>\n        ),\n\n        button: (\n          <>\n            <MDBBtn\n              title=\"Increase quantity\"\n              color=\"success\"\n              size=\"sm\"\n              onClick={() => {\n                handleAddQuantity(item._id);\n              }}\n            >\n              <i className=\"fas fa-plus-circle\"></i>\n            </MDBBtn>\n            <MDBBtn\n              title=\"Decrease quantity\"\n              color=\"info\"\n              size=\"sm\"\n              disbaled={item.quantity === 1}\n              onClick={() => {\n                handleSubtractQuantity(item._id);\n              }}\n            >\n              <i className=\"fas fa-minus-circle\"></i>\n            </MDBBtn>\n            <MDBBtn\n              title=\"Remove item\"\n              color=\"danger\"\n              size=\"sm\"\n              onClick={() => {\n                handleRemove(item._id);\n              }}\n            >\n              <i className=\"fas fa-trash\"></i>\n            </MDBBtn>\n          </>\n        ),\n      });\n    }\n  );\n\n  const user = cookie.get(\"jwtToken\");\n\n  const userLinks = (\n    <Btn color=\"success\">\n      <Link href={\"/checkout\"}>\n        <a className=\"text-reset\">Proceed to Checkout</a>\n      </Link>\n    </Btn>\n  );\n\n  const guestLinks = (\n    <Btn color=\"success\">\n      <Link href={\"/login\"}>\n        <a className=\"text-reset\">Proceed to Checkout</a>\n      </Link>\n    </Btn>\n  );\n\n  return cart.addedItems.length > 0 ? (\n    <>\n      <MDBRow className=\"my-2 ml-3 mr-1 mb-4\" center>\n        <MDBCol>\n          <MDBCard className=\"w-100\">\n            <MDBCardBody>\n              <ProductTable className=\"product-table\" responsive>\n                <MDBTableHead\n                  className=\"font-weight-bold\"\n                  color=\"mdb-color lighten-5\"\n                  columns={cols}\n                />\n                <MDBTableBody rows={rows} />\n              </ProductTable>\n            </MDBCardBody>\n          </MDBCard>\n          <div className=\"text-center indigo-text\">\n            <h2 className=\"my-4\">\n              <strong>Total:</strong> â‚¦\n              {cart.total.toFixed(2).replace(/\\d(?=(\\d{3})+\\.)/g, \"$&,\")}\n            </h2>\n            <Btn className=\"mr-3\">\n              <Link href={\"/products\"}>\n                <a className=\"text-reset\">Continue Shopping</a>\n              </Link>\n            </Btn>\n            {user ? userLinks : guestLinks}\n          </div>\n        </MDBCol>\n      </MDBRow>\n    </>\n  ) : (\n    <>\n      <h3\n        className=\"text-center\"\n        style={{ marginTop: \"212px\", marginBottom: \"211px\" }}\n      >\n        <strong>Your cart is empty</strong>\n      </h3>\n    </>\n  );\n};\n\nconst mapStateToProps = (state: { cart: {} }) => {\n  return {\n    cart: state.cart,\n  };\n};\n\nconst mapDispatchToProps = (dispatch: {\n  (arg0: { type: string; id: string }): void;\n  (arg0: { type: string; id: string }): void;\n  (arg0: { type: string; id: string }): void;\n}) => {\n  return {\n    removeItem: (product: string) => {\n      dispatch(removeItem(product));\n    },\n    addQuantity: (product: string) => {\n      dispatch(addQuantity(product));\n    },\n    subtractQuantity: (product: string) => {\n      dispatch(subtractQuantity(product));\n    },\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Cart);\n"]},"metadata":{},"sourceType":"module"}