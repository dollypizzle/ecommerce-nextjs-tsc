{"ast":null,"code":"import Router from 'next/router';\nimport cookie from 'js-cookie';\nexport const authInitialProps = (isProtectedRoute, path) => ({\n  res\n}) => {\n  const isAuthenticated = checkIfAuthenticated();\n\n  if (isProtectedRoute && !isAuthenticated) {\n    return redirectUser(res, path);\n  }\n\n  return {\n    isAuthenticated\n  };\n};\nexport const checkIfAuthenticated = () => {\n  const auth = cookie.get('jwtToken');\n  return auth ? true : false;\n};\nexport const getUserFromCookie = () => {\n  const authUser = cookie.get('jwtToken');\n  return authUser ? JSON.parse(authUser) : null;\n};\n\nconst redirectUser = (res, path) => {\n  if (res) {\n    res.redirect(302, path);\n  }\n\n  Router.replace(path);\n};","map":{"version":3,"sources":["/home/dolapo/ecommerce-nextjs-t/src/lib/auth.ts"],"names":["Router","cookie","authInitialProps","isProtectedRoute","path","res","isAuthenticated","checkIfAuthenticated","redirectUser","auth","get","getUserFromCookie","authUser","JSON","parse","redirect","replace"],"mappings":"AAAA,OAAOA,MAAP,MAAmB,aAAnB;AAEA,OAAOC,MAAP,MAAmB,WAAnB;AAGA,OAAO,MAAMC,gBAAgB,GAAG,CAACC,gBAAD,EAA4BC,IAA5B,KAA6C,CAAC;AAC5EC,EAAAA;AAD4E,CAAD,KAEtD;AACrB,QAAMC,eAAe,GAAGC,oBAAoB,EAA5C;;AAEA,MAAIJ,gBAAgB,IAAI,CAACG,eAAzB,EAA0C;AACxC,WAAOE,YAAY,CAACH,GAAD,EAAMD,IAAN,CAAnB;AACD;;AAED,SAAO;AAAEE,IAAAA;AAAF,GAAP;AACD,CAVM;AAYP,OAAO,MAAMC,oBAAoB,GAAG,MAAe;AACjD,QAAME,IAAI,GAAGR,MAAM,CAACS,GAAP,CAAW,UAAX,CAAb;AAEA,SAAOD,IAAI,GAAG,IAAH,GAAU,KAArB;AACD,CAJM;AAMP,OAAO,MAAME,iBAAiB,GAAG,MAAsB;AACrD,QAAMC,QAAQ,GAAGX,MAAM,CAACS,GAAP,CAAW,UAAX,CAAjB;AAEA,SAAOE,QAAQ,GAAGC,IAAI,CAACC,KAAL,CAAWF,QAAX,CAAH,GAA0B,IAAzC;AACD,CAJM;;AAMP,MAAMJ,YAAY,GAAG,CAACH,GAAD,EAAWD,IAAX,KAA4B;AAC/C,MAAIC,GAAJ,EAAS;AACPA,IAAAA,GAAG,CAACU,QAAJ,CAAa,GAAb,EAAkBX,IAAlB;AACD;;AACDJ,EAAAA,MAAM,CAACgB,OAAP,CAAeZ,IAAf;AACD,CALD","sourcesContent":["import Router from 'next/router';\nimport { NextPageContext } from 'next';\nimport cookie from 'js-cookie';\nimport { IntUser } from '../components/Products/Show';\n\nexport const authInitialProps = (isProtectedRoute: boolean, path: string) => ({\n  res,\n}: NextPageContext) => {\n  const isAuthenticated = checkIfAuthenticated();\n\n  if (isProtectedRoute && !isAuthenticated) {\n    return redirectUser(res, path);\n  }\n\n  return { isAuthenticated };\n};\n\nexport const checkIfAuthenticated = (): boolean => {\n  const auth = cookie.get('jwtToken');\n\n  return auth ? true : false;\n};\n\nexport const getUserFromCookie = (): IntUser | null => {\n  const authUser = cookie.get('jwtToken');\n\n  return authUser ? JSON.parse(authUser) : null;\n};\n\nconst redirectUser = (res: any, path: string) => {\n  if (res) {\n    res.redirect(302, path);\n  }\n  Router.replace(path);\n};\n"]},"metadata":{},"sourceType":"module"}